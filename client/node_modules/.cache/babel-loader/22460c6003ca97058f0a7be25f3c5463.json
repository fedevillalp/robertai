{"ast":null,"code":"import _classCallCheck from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/src/components/VerticalSlider/index.js\";\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\nvar IntegerStep =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IntegerStep, _React$Component);\n\n  function IntegerStep() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, IntegerStep);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(IntegerStep)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      inputValue: 1\n    };\n\n    _this.onChange = function (value) {\n      _this.setState({\n        inputValue: value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(IntegerStep, [{\n    key: \"render\",\n    value: function render() {\n      var inputValue = this.state.inputValue;\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Slider, {\n        min: 1,\n        max: 20,\n        onChange: this.onChange,\n        value: typeof inputValue === 'number' ? inputValue : 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(InputNumber, {\n        min: 1,\n        max: 20,\n        style: {\n          marginLeft: 16\n        },\n        value: inputValue,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return IntegerStep;\n}(React.Component);\n\nvar DecimalStep =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(DecimalStep, _React$Component2);\n\n  function DecimalStep() {\n    var _getPrototypeOf3;\n\n    var _this2;\n\n    _classCallCheck(this, DecimalStep);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(DecimalStep)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this2.state = {\n      inputValue: 0\n    };\n\n    _this2.onChange = function (value) {\n      if (Number.isNaN(value)) {\n        return;\n      }\n\n      _this2.setState({\n        inputValue: value\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(DecimalStep, [{\n    key: \"render\",\n    value: function render() {\n      var inputValue = this.state.inputValue;\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Slider, {\n        min: 0,\n        max: 1,\n        onChange: this.onChange,\n        value: typeof inputValue === 'number' ? inputValue : 0,\n        step: 0.01,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(InputNumber, {\n        min: 0,\n        max: 1,\n        style: {\n          marginLeft: 16\n        },\n        step: 0.01,\n        value: inputValue,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DecimalStep;\n}(React.Component);\n\nReactDOM.render(React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, React.createElement(IntegerStep, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}), React.createElement(DecimalStep, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n})), mountNode);","map":{"version":3,"sources":["/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/src/components/VerticalSlider/index.js"],"names":["Slider","InputNumber","Row","Col","IntegerStep","state","inputValue","onChange","value","setState","marginLeft","React","Component","DecimalStep","Number","isNaN","ReactDOM","render","mountNode"],"mappings":"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","sourcesContent":["import {\n    Slider, InputNumber, Row, Col,\n  } from 'antd';\n  \n  class IntegerStep extends React.Component {\n    state = {\n      inputValue: 1,\n    }\n  \n    onChange = (value) => {\n      this.setState({\n        inputValue: value,\n      });\n    }\n  \n    render() {\n      const { inputValue } = this.state;\n      return (\n        <Row>\n          <Col span={12}>\n            <Slider\n              min={1}\n              max={20}\n              onChange={this.onChange}\n              value={typeof inputValue === 'number' ? inputValue : 0}\n            />\n          </Col>\n          <Col span={4}>\n            <InputNumber\n              min={1}\n              max={20}\n              style={{ marginLeft: 16 }}\n              value={inputValue}\n              onChange={this.onChange}\n            />\n          </Col>\n        </Row>\n      );\n    }\n  }\n  \n  class DecimalStep extends React.Component {\n    state = {\n      inputValue: 0,\n    }\n  \n    onChange = (value) => {\n      if (Number.isNaN(value)) {\n        return;\n      }\n      this.setState({\n        inputValue: value,\n      });\n    }\n  \n    render() {\n      const { inputValue } = this.state;\n      return (\n        <Row>\n          <Col span={12}>\n            <Slider\n              min={0}\n              max={1}\n              onChange={this.onChange}\n              value={typeof inputValue === 'number' ? inputValue : 0}\n              step={0.01}\n            />\n          </Col>\n          <Col span={4}>\n            <InputNumber\n              min={0}\n              max={1}\n              style={{ marginLeft: 16 }}\n              step={0.01}\n              value={inputValue}\n              onChange={this.onChange}\n            />\n          </Col>\n        </Row>\n      );\n    }\n  }\n  \n  ReactDOM.render(\n    <div>\n      <IntegerStep />\n      <DecimalStep />\n    </div>,\n    mountNode\n  );"]},"metadata":{},"sourceType":"module"}