{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _isNumber2 = _interopRequireDefault(require(\"lodash/isNumber\"));\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _isEqual2 = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _isUndefined2 = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _debounce = _interopRequireDefault(require(\"lodash/debounce\"));\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar _libs = require(\"../../libs\");\n\nvar _slider = require(\"../helpers/slider\");\n\nvar styles = function styles(theme) {\n  return {\n    warp: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n    trackContainer: {\n      width: '100%',\n      height: '100%'\n    },\n    track: {\n      position: 'absolute',\n      transition: 'margin 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, width 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, height 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, left 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, right 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, top 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, bottom 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms'\n    },\n    pointer: {\n      marginTop: 1,\n      width: 12,\n      height: 12,\n      backgroundClip: 'padding-box',\n      border: '0px solid transparent',\n      borderRadius: '50%',\n      boxSizing: 'border-box',\n      position: 'absolute',\n      cursor: 'pointer',\n      pointerEvents: 'inherit',\n      transform: 'translate(-50%, -50%)',\n      transition: 'background 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, border-color 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, width 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, height 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, left 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, right 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, top 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, bottom 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\n      overflow: 'visible',\n      outline: 'none',\n      zIndex: 1\n    },\n    pointerRight: {\n      transform: 'translate(50%, -50%)'\n    },\n    pointerVertical: {\n      marginLeft: 1,\n      transform: 'translate(-50%, 50%)'\n    },\n    pointerVerticalTop: {\n      transform: 'translate(-50%, -50%)'\n    },\n    pointerOver: {\n      '&:before': {\n        content: '\"\"',\n        display: 'block',\n        border: \"0 solid \".concat(theme.palette.action.hover),\n        position: 'absolute',\n        overflow: 'hidden',\n        borderRadius: 'inherit',\n        boxSizing: 'border-box',\n        pointerEvents: 'none',\n        transition: 'border 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, width 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, height 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, left 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, top 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, top 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, bottom 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n        zIndex: -1\n      }\n    },\n    pointerHover: {\n      '&:before': {\n        width: 36,\n        height: 36,\n        borderWidth: 12,\n        left: -12,\n        top: -12\n      }\n    },\n    pointerPressed: {\n      '&:before': {\n        width: 48,\n        height: 48,\n        borderWidth: 18,\n        borderColor: theme.palette.action.selected,\n        left: -18,\n        top: -18\n      }\n    },\n    pointerDisabled: {\n      width: 8,\n      height: 8\n    },\n    scale: {\n      position: 'absolute'\n    }\n  };\n};\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2.default)(Slider, _Component);\n\n  function Slider(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Slider);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Slider).call(this, props));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"min\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"max\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"activePointer\", 'left');\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"calcDefaultValue\", function (defaultValue) {\n      var range = _this.props.range;\n\n      var _assertThisInitialize = (0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)),\n          min = _assertThisInitialize.min,\n          max = _assertThisInitialize.max;\n\n      if (range) {\n        var value = !!_this.state ? _this.state.value : [min, max];\n\n        if ((0, _isArray2.default)(defaultValue)) {\n          var value1 = (0, _isNumber2.default)(defaultValue[0]) ? defaultValue[0] : min;\n          var value2 = (0, _isNumber2.default)(defaultValue[1]) ? defaultValue[1] : max;\n          var valueMin = Math.min(value1, value2);\n          var valueMax = Math.max(value1, value2);\n          value[0] = _this.calcScaleValue(valueMin >= min && valueMin <= max ? valueMin : min);\n          value[1] = _this.calcScaleValue(valueMax >= min && valueMax <= max ? valueMax : max);\n        } else if ((0, _isNumber2.default)(defaultValue)) {\n          var _valueMin = _this.calcScaleValue(defaultValue);\n\n          if (_valueMin <= value[1]) value[0] = _valueMin;else value[1] = _valueMin;\n        }\n\n        return value;\n      } else {\n        return _this.calcScaleValue((0, _isNumber2.default)(defaultValue) && defaultValue >= min && defaultValue <= max ? defaultValue : min);\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"calcScaleValue\", function (value) {\n      var scaleLength = _this.props.scaleLength;\n\n      var _assertThisInitialize2 = (0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)),\n          min = _assertThisInitialize2.min,\n          max = _assertThisInitialize2.max;\n\n      if (scaleLength > 0) {\n        value -= min;\n        var halfScaleLength = scaleLength / 2;\n\n        if ((max - min) % scaleLength > 0 && value / scaleLength > Math.floor((max - min) / scaleLength)) {\n          halfScaleLength = (max - min) % scaleLength / 2;\n        }\n\n        if (value % scaleLength > halfScaleLength) {\n          var upValue = min + Math.ceil(value / scaleLength) * scaleLength;\n          return upValue > max ? max : upValue;\n        } else {\n          return min + Math.floor(value / scaleLength) * scaleLength;\n        }\n      } else return value;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"triggerChange\", function (event) {\n      _this.props.onChangeComplete && _this.debounce(_this.props.onChangeComplete, _this.state.value, event);\n      _this.props.onChange && _this.props.onChange(_this.state.value, event);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"handleChange\", function (e, skip) {\n      var _this$props = _this.props,\n          range = _this$props.range,\n          disabled = _this$props.disabled;\n\n      var _assertThisInitialize3 = (0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)),\n          min = _assertThisInitialize3.min,\n          max = _assertThisInitialize3.max;\n\n      if (disabled) return;\n      var offset = (0, _slider.calculateChange)(e, skip, _this.props, _this.container);\n      var oldValue = _this.state.value;\n\n      var newValue = _this.calcScaleValue(Math.round(offset / 100 * (max - min)) + min);\n\n      if (range) {\n        if (_this.activePointer === 'left' && oldValue[0] !== newValue && newValue < oldValue[1] || newValue <= oldValue[0]) {\n          _this.activePointer === 'right' && (_this.activePointer = 'left');\n\n          _this.setState({\n            value: [newValue, oldValue[1]]\n          }, function () {\n            _this.triggerChange(e);\n          });\n        } else if (_this.activePointer === 'right' && oldValue[1] !== newValue && newValue > oldValue[0] || newValue >= oldValue[1]) {\n          _this.activePointer === 'left' && (_this.activePointer = 'right');\n\n          _this.setState({\n            value: [oldValue[0], newValue]\n          }, function () {\n            _this.triggerChange(e);\n          });\n        }\n      } else {\n        if (oldValue !== newValue) {\n          _this.setState({\n            value: newValue\n          }, function () {\n            _this.triggerChange(e);\n          });\n        }\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"handleMouseOver\", function () {\n      _this.setState({\n        hover: true\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"handleMouseOut\", function () {\n      _this.setState({\n        hover: false\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"handleTouchStart\", function (e, skip) {\n      _this.setState({\n        pressed: true\n      });\n\n      _this.handleChange(e, skip);\n\n      window.addEventListener('touchend', _this.handleMouseUp);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"handleMouseDown\", function (e) {\n      _this.setState({\n        pressed: true\n      });\n\n      _this.handleChange(e, true);\n\n      window.addEventListener('mousemove', _this.handleChange);\n      window.addEventListener('mouseup', _this.handleMouseUp);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"handleMouseUp\", function () {\n      _this.setState({\n        pressed: false\n      });\n\n      _this.unbindEventListeners();\n    });\n    var _min = props.min,\n        _max = props.max,\n        _defaultValue = props.defaultValue,\n        _value = props.value;\n    _this.min = Math.min(_min, _max);\n    _this.max = Math.max(_min, _max);\n    _this.state = {\n      value: _this.calcDefaultValue(_value || _defaultValue),\n      hover: false,\n      pressed: false\n    };\n    _this.debounce = (0, _debounce.default)(function (fn, data, event) {\n      fn(data, event);\n    }, 100);\n    return _this;\n  }\n\n  (0, _createClass2.default)(Slider, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindEventListeners();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var min = nextProps.min,\n          max = nextProps.max;\n      this.min = Math.min(min, max);\n      this.max = Math.max(min, max);\n\n      if (!(0, _isUndefined2.default)(nextProps.value) && !(0, _isEqual2.default)(nextProps.value, this.props.value)) {\n        this.setState({\n          value: this.calcDefaultValue(nextProps.value)\n        });\n      }\n    }\n  }, {\n    key: \"unbindEventListeners\",\n    value: function unbindEventListeners() {\n      window.removeEventListener('mousemove', this.handleChange);\n      window.removeEventListener('mouseup', this.handleMouseUp);\n      window.removeEventListener('touchend', this.handleMouseUp);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          theme = _this$props2.theme,\n          range = _this$props2.range,\n          scaleLength = _this$props2.scaleLength,\n          direction = _this$props2.direction,\n          color = _this$props2.color,\n          disabled = _this$props2.disabled;\n      var _this$state = this.state,\n          value = _this$state.value,\n          hover = _this$state.hover,\n          pressed = _this$state.pressed;\n      var min = this.min,\n          max = this.max;\n      var trackColor = disabled ? theme.palette.grey[700] : color || theme.palette.primary[theme.palette.type];\n      var vertical = direction === 'vertical';\n      var rootStyle = Object.assign({\n        position: 'relative',\n        width: '100%',\n        height: 48,\n        display: 'inline-block'\n      }, vertical && {\n        width: 48,\n        height: '100%'\n      });\n      var containerStyle = Object.assign({\n        position: 'absolute',\n        top: 23,\n        left: 0,\n        width: '100%',\n        height: 2\n      }, vertical && {\n        top: 0,\n        left: 23,\n        height: '100%',\n        width: 2\n      });\n      var trackEl;\n      var thumbEl;\n\n      if (range) {\n        var offsetLeft = Math.round((value[0] - min) / (max - min) * 100);\n        var offsetRight = 100 - Math.round((value[1] - min) / (max - min) * 100);\n        var trackActiveStyle = Object.assign({\n          backgroundColor: trackColor\n        }, vertical ? {\n          width: '100%',\n          bottom: \"\".concat(offsetLeft, \"%\"),\n          top: \"\".concat(offsetRight, \"%\"),\n          marginTop: disabled ? 6 : 0,\n          marginBottom: disabled ? 6 : 0\n        } : {\n          height: '100%',\n          left: \"\".concat(offsetLeft, \"%\"),\n          right: \"\".concat(offsetRight, \"%\"),\n          marginRight: disabled ? 6 : 0,\n          marginLeft: disabled ? 6 : 0\n        });\n        var trackLeftStyle = Object.assign({\n          backgroundColor: trackColor,\n          opacity: '.38'\n        }, vertical ? {\n          width: '100%',\n          height: disabled ? \"calc(\".concat(offsetLeft, \"% - 6px)\") : \"calc(\".concat(offsetLeft, \"%)\"),\n          marginTop: disabled ? 6 : 0,\n          bottom: 0\n        } : {\n          height: '100%',\n          width: disabled ? \"calc(\".concat(offsetLeft, \"% - 6px)\") : \"calc(\".concat(offsetLeft, \"%)\"),\n          marginRight: disabled ? 6 : 0,\n          left: 0\n        });\n        var trackRightStyle = Object.assign({\n          backgroundColor: trackColor,\n          opacity: '.38'\n        }, vertical ? {\n          width: '100%',\n          height: disabled ? \"calc(\".concat(offsetRight, \"% - 6px)\") : \"calc(\".concat(offsetRight, \"%)\"),\n          marginBottom: disabled ? 6 : 0,\n          top: 0\n        } : {\n          height: '100%',\n          width: disabled ? \"calc(\".concat(offsetRight, \"% - 6px)\") : \"calc(\".concat(offsetRight, \"%)\"),\n          marginLeft: disabled ? 6 : 0,\n          right: 0\n        });\n        var thumbLeftStyle = Object.assign({\n          backgroundColor: trackColor\n        }, vertical ? {\n          left: 0,\n          bottom: \"\".concat(offsetLeft, \"%\")\n        } : {\n          top: 0,\n          left: \"\".concat(offsetLeft, \"%\")\n        });\n        var thumbLeftClass = this.classNames(classes.pointer, disabled && classes.pointerDisabled, vertical && classes.pointerVertical, this.activePointer === 'left' && !disabled && (hover || pressed) && classes.pointerOver, this.activePointer === 'left' && !disabled && hover && classes.pointerHover, this.activePointer === 'left' && !disabled && pressed && classes.pointerPressed);\n        var thumbRightStyle = Object.assign({\n          backgroundColor: trackColor\n        }, vertical ? {\n          left: 0,\n          top: \"\".concat(offsetRight, \"%\")\n        } : {\n          top: 0,\n          right: \"\".concat(offsetRight, \"%\")\n        });\n        var thumbRightClass = this.classNames(classes.pointer, classes.pointerRight, disabled && classes.pointerDisabled, vertical && classes.pointerVertical, vertical && classes.pointerVerticalTop, this.activePointer === 'right' && !disabled && (hover || pressed) && classes.pointerOver, this.activePointer === 'right' && !disabled && hover && classes.pointerHover, this.activePointer === 'right' && !disabled && pressed && classes.pointerPressed);\n        trackEl = _react.default.createElement(\"div\", null, _react.default.createElement(\"div\", {\n          className: classes.track,\n          style: trackLeftStyle\n        }), _react.default.createElement(\"div\", {\n          className: classes.track,\n          style: trackActiveStyle\n        }), _react.default.createElement(\"div\", {\n          className: classes.track,\n          style: trackRightStyle\n        }));\n        thumbEl = _react.default.createElement(\"div\", null, _react.default.createElement(\"div\", {\n          className: thumbLeftClass,\n          style: thumbLeftStyle,\n          onMouseOver: function onMouseOver() {\n            _this2.activePointer = 'left';\n          },\n          onTouchStart: function onTouchStart() {\n            _this2.activePointer = 'left';\n          }\n        }), _react.default.createElement(\"div\", {\n          className: thumbRightClass,\n          style: thumbRightStyle,\n          onMouseOver: function onMouseOver() {\n            _this2.activePointer = 'right';\n          },\n          onTouchStart: function onTouchStart() {\n            _this2.activePointer = 'right';\n          }\n        }));\n      } else {\n        var offset = Math.round((value - min) / (max - min) * 100);\n\n        var _trackActiveStyle = Object.assign({\n          backgroundColor: trackColor\n        }, vertical ? {\n          width: '100%',\n          height: disabled ? \"calc(\".concat(offset, \"% - 6px)\") : \"calc(\".concat(offset, \"%)\"),\n          marginTop: disabled ? 6 : 0,\n          bottom: 0\n        } : {\n          height: '100%',\n          width: disabled ? \"calc(\".concat(offset, \"% - 6px)\") : \"calc(\".concat(offset, \"%)\"),\n          marginRight: disabled ? 6 : 0,\n          left: 0\n        });\n\n        var trackStyle = Object.assign({\n          backgroundColor: trackColor,\n          opacity: '.38'\n        }, vertical ? {\n          width: '100%',\n          height: disabled ? \"calc(\".concat(100 - offset, \"% - 6px)\") : \"calc(\".concat(100 - offset, \"%)\"),\n          marginBottom: disabled ? 6 : 0,\n          top: 0\n        } : {\n          height: '100%',\n          width: disabled ? \"calc(\".concat(100 - offset, \"% - 6px)\") : \"calc(\".concat(100 - offset, \"%)\"),\n          marginLeft: disabled ? 6 : 0,\n          right: 0\n        });\n        var thumbStyle = Object.assign({\n          backgroundColor: trackColor\n        }, vertical ? {\n          left: 0,\n          bottom: \"\".concat(offset, \"%\")\n        } : {\n          top: 0,\n          left: \"\".concat(offset, \"%\")\n        });\n        var thumbClass = this.classNames(classes.pointer, disabled && classes.pointerDisabled, vertical && classes.pointerVertical, !disabled && (hover || pressed) && classes.pointerOver, !disabled && hover && classes.pointerHover, pressed && classes.pointerPressed);\n        trackEl = _react.default.createElement(\"div\", null, _react.default.createElement(\"div\", {\n          className: classes.track,\n          style: _trackActiveStyle\n        }), _react.default.createElement(\"div\", {\n          className: classes.track,\n          style: trackStyle\n        }));\n        thumbEl = _react.default.createElement(\"div\", {\n          className: thumbClass,\n          style: thumbStyle\n        });\n      }\n\n      var scaleEl;\n\n      if (scaleLength > 0 && scaleLength < max - min) {\n        var scaleCount = Math.floor((max - min) / scaleLength);\n        var scaleArray = Array.from(new Array(scaleCount + ((max - min) % scaleLength === 0 ? 1 : 2)), function (val, index) {\n          return index;\n        });\n        scaleEl = _react.default.createElement(\"div\", null, scaleArray.map(function (i) {\n          var scaleValue = scaleLength * i + min;\n          var scaleOffset = 0;\n\n          if (i === scaleArray.length - 1) {\n            scaleOffset = 100;\n          } else if (i > 0) {\n            scaleOffset = (1 - (max - min) % scaleLength / (max - min)) * 100 / scaleCount * i;\n          }\n\n          var scaleStyle = Object.assign({\n            backgroundColor: trackColor\n          }, vertical ? {\n            width: '100%',\n            height: 2,\n            left: 0,\n            bottom: \"\".concat(scaleOffset, \"%\")\n          } : {\n            height: '100%',\n            width: 2,\n            top: 0,\n            left: \"\".concat(scaleOffset, \"%\")\n          });\n\n          if (range && scaleValue > value[0] && scaleValue < value[1] || !range && scaleValue < value) {\n            Object.assign(scaleStyle, {\n              backgroundColor: 'rgba(255,255,255,.38)'\n            });\n          }\n\n          return _react.default.createElement(\"span\", {\n            key: i,\n            className: classes.scale,\n            style: scaleStyle\n          });\n        }));\n      }\n\n      return _react.default.createElement(\"div\", {\n        className: this.className('slider'),\n        style: this.style(rootStyle)\n      }, _react.default.createElement(\"div\", {\n        className: classes.warp,\n        ref: function ref(container) {\n          return _this2.container = container;\n        },\n        onMouseOver: this.handleMouseOver,\n        onMouseOut: this.handleMouseOut,\n        onMouseDown: this.handleMouseDown,\n        onTouchMove: this.handleChange,\n        onTouchStart: this.handleTouchStart\n      }, _react.default.createElement(\"div\", {\n        style: containerStyle\n      }, trackEl, scaleEl, thumbEl)));\n    }\n  }]);\n  return Slider;\n}(_libs.Component);\n\n(0, _defineProperty2.default)(Slider, \"defaultProps\", {\n  min: 0,\n  max: 100,\n  defaultValue: 0,\n  range: false,\n  scale: 0,\n  direction: 'horizontal',\n  onChange: function onChange() {},\n  onChangeComplete: function onChangeComplete() {}\n});\n\nvar _default = (0, _styles.withStyles)(styles, {\n  withTheme: true\n})(Slider);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}