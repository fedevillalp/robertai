{"ast":null,"code":"import _classCallCheck from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/src/components/Transcript/index.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport TranscriptTextBox from '../TranscriptTextBox';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      margin: theme.spacing.unit\n    },\n    input: {\n      display: 'none'\n    }\n  };\n};\n\nvar Transcript =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Transcript, _Component);\n\n  function Transcript() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Transcript);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Transcript)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      transcript: \"\",\n      audioJobID: \"\",\n      audioJobStatus: \"\",\n      fileInfo: null,\n      status: null\n    };\n\n    _this.getTranscriptText = function (audioJobID) {\n      axios.get(\"/api/motivation/getTranscriptText/\" + audioJobID).then(function (response) {\n        _this.setState({\n          transcript: response.data\n        });\n\n        _this.props.getTranscript(response.data); //sets the state of transcript to response.data in app.js component\n\n\n        _this.saveTranscriptTexttoDB(audioJobID, response.data);\n      });\n    };\n\n    _this.saveTranscriptTexttoDB = function (audioJobID, transcript) {\n      var postData = {\n        audioJobID: audioJobID,\n        transcript: transcript\n      };\n      axios.post(\"/api/motivation/saveTranscriptText\", postData).then(function (response) {\n        // Got here, we should have a saved transcript\n        console.log(\"Saved!\");\n\n        _this.setState({\n          status: \"saveTranscripttext success!\"\n        });\n      }).catch(function (err) {\n        _this.setState({\n          status: \"Error when saveTranscripttext!\"\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Transcript, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"/api/fileInfo/revai_job_id/\" + this.props.match.params.fileInfoId).then(function (response) {\n        _this2.setState({\n          audioJobID: response.data.fileInfo.revai_job_id,\n          fileInfo: response.data\n        });\n\n        _this2.getTranscriptText(response.data.fileInfo.revai_job_id);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(TranscriptTextBox, {\n        transcript: this.state.transcript,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Transcript;\n}(Component);\n\nexport default withRouter(Transcript);","map":{"version":3,"sources":["/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/src/components/Transcript/index.js"],"names":["React","Component","axios","TranscriptTextBox","Redirect","withRouter","styles","theme","button","margin","spacing","unit","input","display","Transcript","state","transcript","audioJobID","audioJobStatus","fileInfo","status","getTranscriptText","get","then","response","setState","data","props","getTranscript","saveTranscriptTexttoDB","postData","post","console","log","catch","err","match","params","fileInfoId","revai_job_id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcC;AADhB,KADe;AAIvBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE;AADJ;AAJgB,GAAL;AAAA,CAApB;;IASMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,UAAU,EAAE,EAFN;AAGNC,MAAAA,cAAc,EAAE,EAHV;AAINC,MAAAA,QAAQ,EAAE,IAJJ;AAKNC,MAAAA,MAAM,EAAE;AALF,K;;UAmBRC,iB,GAAoB,UAACJ,UAAD,EAAgB;AAClCf,MAAAA,KAAK,CAACoB,GAAN,CAAU,uCAAuCL,UAAjD,EACGM,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,cAAKC,QAAL,CAAc;AAAET,UAAAA,UAAU,EAAEQ,QAAQ,CAACE;AAAvB,SAAd;;AACA,cAAKC,KAAL,CAAWC,aAAX,CAAyBJ,QAAQ,CAACE,IAAlC,EAFgB,CAE0B;;;AAC1C,cAAKG,sBAAL,CAA4BZ,UAA5B,EAAwCO,QAAQ,CAACE,IAAjD;AACD,OALH;AAMD,K;;UAGDG,sB,GAAyB,UAACZ,UAAD,EAAYD,UAAZ,EAA2B;AAElD,UAAMc,QAAQ,GAAG;AAACb,QAAAA,UAAU,EAAEA,UAAb;AAAyBD,QAAAA,UAAU,EAACA;AAApC,OAAjB;AAEAd,MAAAA,KAAK,CAAC6B,IAAN,CAAW,oCAAX,EAAiDD,QAAjD,EACCP,IADD,CACM,UAAAC,QAAQ,EAAI;AACd;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,cAAKR,QAAL,CAAc;AAAEL,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD,OALH,EAMCc,KAND,CAMO,UAAAC,GAAG,EAAI;AACZ,cAAKV,QAAL,CAAc;AAAEL,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD,OARD;AASD,K;;;;;;;wCAlCkB;AAAA;;AACjBlB,MAAAA,KAAK,CAACoB,GAAN,CAAU,gCAA8B,KAAKK,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,UAAhE,EACGf,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,QAAA,MAAI,CAACC,QAAL,CAAc;AACVR,UAAAA,UAAU,EAAEO,QAAQ,CAACE,IAAT,CAAcP,QAAd,CAAuBoB,YADzB;AAEVpB,UAAAA,QAAQ,EAAEK,QAAQ,CAACE;AAFT,SAAd;;AAIA,QAAA,MAAI,CAACL,iBAAL,CAAuBG,QAAQ,CAACE,IAAT,CAAcP,QAAd,CAAuBoB,YAA9C;AACH,OAPD;AAQD;;;6BA4BQ;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAI,KAAKxB,KAAL,CAAWC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EArDsBf,S;;AAwDzB,eAAeI,UAAU,CAACS,UAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport TranscriptTextBox from '../TranscriptTextBox'\nimport { Redirect, withRouter } from 'react-router-dom';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nclass Transcript extends Component {\n  state = {\n    transcript: \"\",\n    audioJobID: \"\",\n    audioJobStatus: \"\",\n    fileInfo: null,\n    status: null\n  };\n\n  componentDidMount(){\n    axios.get(\"/api/fileInfo/revai_job_id/\"+this.props.match.params.fileInfoId)\n      .then(response => {\n        this.setState({ \n            audioJobID: response.data.fileInfo.revai_job_id,\n            fileInfo: response.data\n        });\n        this.getTranscriptText(response.data.fileInfo.revai_job_id);\n    })\n  }\n\n  getTranscriptText = (audioJobID) => {\n    axios.get(\"/api/motivation/getTranscriptText/\" + audioJobID)\n      .then(response => {\n        this.setState({ transcript: response.data});\n        this.props.getTranscript(response.data);  //sets the state of transcript to response.data in app.js component\n        this.saveTranscriptTexttoDB(audioJobID, response.data);\n      });\n  }\n\n  //Save transcript to database\n  saveTranscriptTexttoDB = (audioJobID,transcript) => {\n    \n    const postData = {audioJobID: audioJobID, transcript:transcript}\n\n    axios.post(\"/api/motivation/saveTranscriptText\", postData)\n    .then(response => {\n        // Got here, we should have a saved transcript\n        console.log(\"Saved!\");\n        this.setState({ status: \"saveTranscripttext success!\" });\n      })\n    .catch(err => {\n      this.setState({ status: \"Error when saveTranscripttext!\" });\n    })\n  }\n\n \n  render() {\n    \n    return (\n      <span>\n        <TranscriptTextBox transcript = {this.state.transcript}/>\n      </span>\n    );\n  }\n}\n\nexport default withRouter(Transcript);\n\n\n"]},"metadata":{},"sourceType":"module"}