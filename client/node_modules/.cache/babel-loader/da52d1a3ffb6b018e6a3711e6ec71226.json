{"ast":null,"code":"import _classCallCheck from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/src/components/FileInfoList/index.js\";\nimport React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport FileInfoListItem from '../FileInfoListItem';\n\nvar FileInfoList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FileInfoList, _React$Component);\n\n  function FileInfoList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileInfoList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileInfoList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fileInfoList: []\n    };\n    return _this;\n  }\n\n  _createClass(FileInfoList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUploads();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.uploaderUrl != prevProps.uploaderUrl) {\n        this.getUploads();\n      }\n    }\n  }, {\n    key: \"getUploads\",\n    value: function getUploads() {\n      var _this2 = this;\n\n      //get all the files this user has uploaded\n      axios.get(\"/api/fileInfo\").then(function (response) {\n        _this2.setState({\n          fileInfoList: response.data.fileInfoList\n        }); // 'data' object provided by axios\n\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var row = this.state.fileInfoList.map(function (item, index) {\n        return React.createElement(FileInfoListItem, {\n          key: index + 1,\n          item: item,\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"table\",\n        className: \"table table-hover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"File Name\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Duration\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Audio\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Uploaded\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Status\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, row)));\n    }\n  }]);\n\n  return FileInfoList;\n}(React.Component);\n\nexport default withRouter(FileInfoList);","map":{"version":3,"sources":["/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/src/components/FileInfoList/index.js"],"names":["React","Redirect","withRouter","Link","axios","FileInfoListItem","FileInfoList","state","fileInfoList","getUploads","prevProps","prevState","props","uploaderUrl","get","then","response","setState","data","row","map","item","index","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;;IAIMC,Y;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AAAEC,MAAAA,YAAY,EAAE;AAAhB,K;;;;;;wCAEY;AAChB,WAAKC,UAAL;AACH;;;uCAEkBC,S,EAAWC,S,EAAW;AACrC,UAAI,KAAKC,KAAL,CAAWC,WAAX,IAA0BH,SAAS,CAACG,WAAxC,EAAqD;AACjD,aAAKJ,UAAL;AACH;AACJ;;;iCAEY;AAAA;;AACT;AACAL,MAAAA,KAAK,CAACU,GAAN,CAAU,eAAV,EACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,QAAA,MAAI,CAACC,QAAL,CAAc;AAAET,UAAAA,YAAY,EAAEQ,QAAQ,CAACE,IAAT,CAAcV;AAA9B,SAAd,EADc,CAC+C;;AAChE,OAHL;AAIH;;;6BAKM;AAGP,UAAIW,GAAG,GAAG,KAAKZ,KAAL,CAAWC,YAAX,CAAwBY,GAAxB,CAA4B,UAACC,IAAD,EAAMC,KAAN;AAAA,eAClC,oBAAC,gBAAD;AAAkB,UAAA,GAAG,EAAGA,KAAK,GAAC,CAA9B;AAAiC,UAAA,IAAI,EAAED,IAAvC;AAA6C,UAAA,KAAK,EAAEC,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADkC;AAAA,OAA5B,CAAV;AAKA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,SAAS,EAAC,mBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAII;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,EAKI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,EAMI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CADJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKH,GAFL,CAXJ,CADJ,CADJ;AAqBD;;;;EArDwBnB,KAAK,CAACuB,S;;AAyDjC,eAAerB,UAAU,CAACI,YAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport FileInfoListItem from '../FileInfoListItem';\n\n\n\nclass FileInfoList extends React.Component {\n    state = { fileInfoList: [] }\n\n    componentDidMount() {\n        this.getUploads();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.uploaderUrl != prevProps.uploaderUrl) {\n            this.getUploads();\n        }\n    }\n\n    getUploads() {\n        //get all the files this user has uploaded\n        axios.get(\"/api/fileInfo\")\n            .then(response => {\n                this.setState({ fileInfoList: response.data.fileInfoList }); // 'data' object provided by axios\n            });\n    }\n\n\n    \n\n  render() {\n\n     \n    let row = this.state.fileInfoList.map((item,index)  => \n        <FileInfoListItem key ={index+1} item={item} index={index} />\n        \n    ) \n\n    return (\n        <div>\n            <table id=\"table\" className=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">File Name</th>\n                        <th scope=\"col\">Duration</th>\n                        <th scope=\"col\">Audio</th>\n                        <th scope=\"col\">Uploaded</th>\n                        <th scope=\"col\">Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n\n                    {row}\n                \n                </tbody>\n            </table>  \n        </div>  \n    )\n  }\n\n}\n\nexport default withRouter(FileInfoList);\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}