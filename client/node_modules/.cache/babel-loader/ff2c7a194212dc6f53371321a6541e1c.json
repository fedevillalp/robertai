{"ast":null,"code":"import _classCallCheck from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/src/components/Uploader/index.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport UploadButton from '../UploadButton'; //**********************************\n//Gets called at <App.js>\n//Gets and sends audio file pointer to /api/upload\n//**********************************\n\nvar inputStyle = {\n  float: 'left',\n  margin: '10px',\n  border: '1px solid gray'\n};\nvar outerInputStyle = {\n  border: '1px solid gray',\n  margin: '70px' //display: 'inline-block',\n  //textalign: 'center'\n\n};\n\nvar Uploader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Uploader, _Component);\n\n  function Uploader() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Uploader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Uploader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      link_to_audio: null,\n      job_status: null //Do we need the state here ?\n      // Get file from user\n      // File input fields cannot be controlled by React since React cannot set their value\n      // So we will hold a reference to it so we can access the field later\n      // https://reactjs.org/docs/refs-and-the-dom.html\n      // https://reactjs.org/docs/uncontrolled-components.html#the-file-input-tag\n\n    };\n    _this.fileInput = React.createRef();\n\n    _this.uploadFile = function () {\n      //Has a file been selected ? \n      if (!_this.fileInput.current.files.length) {\n        console.log('No file was selected');\n        return;\n      } // Grab file from the reference\n\n\n      var file = _this.fileInput.current.files[0]; // Build FormData to submit to server at /api/upload\n\n      var data = new FormData();\n      data.append('file', file);\n      console.log('This is the file that has been selected:', file); // If you want to add any extra info to this post\n\n      data.append('description', 'blah blah blah');\n      data.append('user_id', _this.props.user_id); //user_id comming from App\n\n      console.log(\"data\" + data); // Send audio file pointer to our upload API route \n      // which a) uploads to cloudinary b) makes call to REVai \n      // and c) returns cloudinary storage link and revai job status\n\n      axios.post('/api/upload', data).then(function (response) {\n        _this.setState({\n          link_to_audio: response.data.link_to_audio,\n          //Do we need the state here ?\n          job_status: response.data.job_status //Do we need the state here ?\n\n        });\n\n        window.location.reload(); //TO DO: Remove line 55. <FileInfoList/> already called from App.js \n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Uploader, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"jumbotron jumbotron-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        style: outerInputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        ref: this.fileInput,\n        style: inputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(UploadButton, {\n        uploadFile: this.uploadFile,\n        style: inputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Uploader;\n}(Component);\n\nexport default Uploader;","map":{"version":3,"sources":["/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/src/components/Uploader/index.js"],"names":["React","Component","axios","UploadButton","inputStyle","float","margin","border","outerInputStyle","Uploader","state","link_to_audio","job_status","fileInput","createRef","uploadFile","current","files","length","console","log","file","data","FormData","append","props","user_id","post","then","response","setState","window","location","reload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport UploadButton from '../UploadButton';\n\n//**********************************\n\n//Gets called at <App.js>\n//Gets and sends audio file pointer to /api/upload\n \n//**********************************\n\nconst inputStyle = {\n  float: 'left',\n  margin: '10px',\n  border: '1px solid gray'\n\n};\n\nconst outerInputStyle = {\n  border: '1px solid gray',\n  margin: '70px',\n  //display: 'inline-block',\n  //textalign: 'center'\n};\n\nclass Uploader extends Component {\n  state = { link_to_audio: null, job_status: null }  //Do we need the state here ?\n\n  // Get file from user\n  // File input fields cannot be controlled by React since React cannot set their value\n  // So we will hold a reference to it so we can access the field later\n  // https://reactjs.org/docs/refs-and-the-dom.html\n  // https://reactjs.org/docs/uncontrolled-components.html#the-file-input-tag\n  fileInput = React.createRef();  \n  \n  // Sent in <UploadButton/>'s props\n  uploadFile = () => {\n    \n    //Has a file been selected ? \n    if (!this.fileInput.current.files.length) {\n      console.log('No file was selected');\n      return;\n    }\n\n    // Grab file from the reference\n    const file = this.fileInput.current.files[0];\n\n    // Build FormData to submit to server at /api/upload\n    const data = new FormData()\n    data.append('file', file);\n\n    console.log('This is the file that has been selected:', file);\n\n    // If you want to add any extra info to this post\n    data.append('description', 'blah blah blah');\n    data.append('user_id', this.props.user_id); //user_id comming from App\n\n    console.log(\"data\" + data);\n\n    // Send audio file pointer to our upload API route \n    // which a) uploads to cloudinary b) makes call to REVai \n    // and c) returns cloudinary storage link and revai job status\n    axios.post('/api/upload', data).then((response) => {\n      this.setState({\n        link_to_audio: response.data.link_to_audio,   //Do we need the state here ?\n        job_status: response.data.job_status  //Do we need the state here ?\n      })\n      window.location.reload();    //TO DO: Remove line 55. <FileInfoList/> already called from App.js \n    })\n  }\n    \n  render() {\n    return(\n      <div>\n          <div className=\"row \">\n                        <div className=\"col col-lg-12\">\n                          \n                          <div class=\"jumbotron jumbotron-fluid\" >\n                              <div class=\"container\" style={outerInputStyle} >\n                                <input type=\"file\" ref={this.fileInput} style={inputStyle} />\n                                <UploadButton uploadFile={this.uploadFile} style={inputStyle}/> \n                              </div>\n                          </div>\n                          \n                        </div>\n            </div>\n      </div>\n    )\n  }\n}\n\nexport default Uploader"]},"metadata":{},"sourceType":"module"}