{"ast":null,"code":"import _classCallCheck from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport Transcript from \"./components/Transcript\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport \"./App.css\";\nimport Navbar from \"./components/navbar\";\nimport BarChart from \"./components/barChart\";\nimport BarChartWordMap from \"./components/BarChartWordMap\";\nimport TextFields from \"./components/Textfields\";\nimport RegistrationPage from \"./pages/registrationpage\";\nimport Uploader from \"./components/Uploader\";\nimport FrontPage from \"./pages/FrontPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport loginController from \"./controllers/LoginController\";\nimport FileInfoList from \"./components/FileInfoList\";\nimport UploadPage from \"./pages/UploadPage\";\nimport NumberSelector from \"./components/NumberSelector\";\nimport NumberSelectorSentence from \"./components/NumberSelectorSentence\";\nimport wordmap from \"./Algorithms/wordmap\";\nimport sentenceFinder from \"./Algorithms/sentenceFinder\";\nimport ScrollTabSentence from \"./components/ScrollTabSentence\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      words: [],\n      topWords: null,\n      top_words_sorted: null,\n      found_sentences: null,\n      data: [],\n      wordMapData: [],\n      transcript: \"Your transcript will appear here\",\n      user: null,\n      fileList: null\n    };\n\n    _this.setUser = function (user) {\n      console.log(\"setUser\", user);\n\n      _this.setState({\n        user: user\n      });\n    };\n\n    _this.updateTopWords = function (topWords) {\n      //this.wordMap(this.state.transcript);\n      var data = wordmap.wordMap(_this.state.transcript, topWords);\n      data.keysSorted.shift(); //top words sorted except the first one\n\n      console.log('******* top words sorted', data.keysSorted);\n      var found_sentences = sentenceFinder.sentenceFinder(_this.state.transcript, data.keysSorted);\n      console.log(\"####CONSOLE\", found_sentences);\n\n      _this.setState({\n        topWords: topWords,\n        wordMapData: data.data,\n        top_words_sorted: data.keysSorted,\n        found_sentences: found_sentences\n      });\n    };\n\n    _this.updateResults = function (wordstoCount) {\n      _this.setState({\n        words: wordstoCount\n      });\n\n      _this.wordCount(_this.state.transcript, wordstoCount.toString().trim());\n    };\n\n    _this.getTranscript = function (transcript) {\n      // console.log('getTranscript text', transcript)\n      _this.setState({\n        transcript: transcript\n      });\n    };\n\n    _this.uploaderUrlChanged = function (url) {\n      _this.setState({\n        uploaderUrl: url\n      });\n    };\n\n    _this.wordCount = function (text, words) {\n      var counter = 0;\n      var textArray = text.split(\" \");\n      var searchTerms = words.split(\" \");\n      var result = [];\n\n      for (var k = 0; k < searchTerms.length; k++) {\n        for (var i = 0; i < textArray.length; i++) {\n          if (textArray[i] === searchTerms[k]) {\n            counter++;\n          }\n        }\n\n        result[k] = counter;\n        counter = 0;\n      }\n\n      _this.createObject(result, searchTerms);\n\n      return result;\n    };\n\n    _this.createObject = function (result, searchTerms) {\n      var data = [];\n\n      for (var i = 0; i < searchTerms.length; i++) {\n        data.push({\n          name: searchTerms[i],\n          pv: result[i]\n        });\n      } //Update state to refresh chart\n\n\n      _this.setState({\n        data: data\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    //Authentication Methods\n    value: function componentDidMount() {\n      loginController.addUserChangedListener(this.setUser);\n      loginController.recheckLogin();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log(\"WillUnmount\");\n      loginController.removeUserChangedListener(this.setUser);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var words = this.state.words.toString().trim();\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        loginController: loginController,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, !this.state.user && React.createElement(Route, {\n        path: \"/RegistrationPage\",\n        component: RegistrationPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), !this.state.user && React.createElement(Route, {\n        path: \"/LoginPage/:reason?\",\n        component: LoginPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), !this.state.user && React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: FrontPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), this.state.user && React.createElement(Route, {\n        exact: true,\n        path: \"/UserHomePage\",\n        render: function render(props) {\n          return React.createElement(UploadPage, {\n            user_id: _this2.state.user.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), this.state.user && React.createElement(Route, {\n        exact: true,\n        path: \"/Results/:fileInfoId?\",\n        render: function render(props) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col col-lg-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, React.createElement(Transcript, {\n            getTranscript: _this2.getTranscript,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"col col-lg-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }, React.createElement(TextFields, {\n            updateResults: _this2.updateResults,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }), React.createElement(BarChart, {\n            data: _this2.state.data,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }), React.createElement(NumberSelector, {\n            updateTopWords: _this2.updateTopWords,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          }), React.createElement(BarChartWordMap, {\n            data: _this2.state.wordMapData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }), React.createElement(NumberSelectorSentence, {\n            updateTopWords: _this2.updateTopWords,\n            top_words_sorted: _this2.state.top_words_sorted,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }), React.createElement(ScrollTabSentence, {\n            top_words_sorted: [\"↵Speaker\", \"0\", \"1\", \"a\", \"you\", \"I\", \"this\", \"is\", \"to\", \"see\", \"if\", \"recognize\", \"though.\", \"And\", \"that\", \"be\", \"speaker\", \"Yeah.\", \"at\", \"could\", \"it.\", \"Speaker\", \"00:00\", \"Now.\", \"So\", \"test\", \"rabbi\"],\n            found_sentences: _this2.state.found_sentences,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          })))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n{\n  /* { this.state.user ? <div>User: {this.state.user.username} UserID: {this.state.user.id}</div> : null } */\n}","map":{"version":3,"sources":["/Users/federico/Library/Mobile Documents/com~apple~CloudDocs/Personal Federico [iCloud]/Projectos/Transcriber/client/src/App.js"],"names":["React","Component","Transcript","BrowserRouter","Router","Route","Switch","Link","Navbar","BarChart","BarChartWordMap","TextFields","RegistrationPage","Uploader","FrontPage","LoginPage","loginController","FileInfoList","UploadPage","NumberSelector","NumberSelectorSentence","wordmap","sentenceFinder","ScrollTabSentence","App","state","words","topWords","top_words_sorted","found_sentences","data","wordMapData","transcript","user","fileList","setUser","console","log","setState","updateTopWords","wordMap","keysSorted","shift","updateResults","wordstoCount","wordCount","toString","trim","getTranscript","uploaderUrlChanged","url","uploaderUrl","text","counter","textArray","split","searchTerms","result","k","length","i","createObject","push","name","pv","addUserChangedListener","recheckLogin","removeUserChangedListener","props","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Transcript from \"./components/Transcript\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport \"./App.css\";\nimport Navbar from \"./components/navbar\";\nimport BarChart from \"./components/barChart\";\nimport BarChartWordMap from \"./components/BarChartWordMap\";\nimport TextFields from \"./components/Textfields\";\nimport RegistrationPage from \"./pages/registrationpage\";\nimport Uploader from \"./components/Uploader\";\nimport FrontPage from \"./pages/FrontPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport loginController from \"./controllers/LoginController\"\nimport FileInfoList from \"./components/FileInfoList\";\nimport UploadPage from \"./pages/UploadPage\";\nimport NumberSelector from \"./components/NumberSelector\";\nimport NumberSelectorSentence from \"./components/NumberSelectorSentence\";\nimport wordmap from \"./Algorithms/wordmap\";\nimport sentenceFinder from \"./Algorithms/sentenceFinder\";\nimport ScrollTabSentence from \"./components/ScrollTabSentence\";\n\n\n\nclass App extends Component {\n\n  state = {\n    words: [],\n    topWords: null,\n    top_words_sorted: null,\n    found_sentences: null,\n    data: [],\n    wordMapData: [],\n    transcript: \"Your transcript will appear here\",\n    user: null,\n    fileList: null\n  };\n\n  //Authentication Methods\n\n  componentDidMount() {\n    loginController.addUserChangedListener(this.setUser);\n    loginController.recheckLogin();\n  }\n\n  componentWillUnmount() {\n    console.log(\"WillUnmount\");\n    loginController.removeUserChangedListener(this.setUser);\n  }\n\n  setUser = (user) => {\n    console.log(\"setUser\", user);\n    this.setState({ user: user });\n  }\n\n  // createWordMapData = (wordListandNumbers,wordsSorted) => {\n  //   //this function formats the most repeated words\n  //   //in data format ready to plot\n  \n  //   let data = [];\n  \n  //     for (let i = 0; i < wordsSorted.length; i++) {\n  //       if(wordsSorted[i]!=\"\"){\n  //         data.push({\n  //           name: wordsSorted[i], repeated: wordListandNumbers[wordsSorted[i]]\n  //         })\n  //       }\n  //     }\n  \n  //     //Update state to refresh chart\n  //   this.setState({\n  //     wordMapData: data\n  //   });\n  //     console.log('wordmapdata:',data);\n  \n  // }\n\n  //  wordMap = (text)=> {\n  //   //This function received a text string and returns \n  //   // one object of word:times_repeated pairs for all words\n  //   // and one vector in the order ot repetition from high to low\n  //   console.log('This is wordmap !!!*****')\n  //   let textArray = text.split(\" \");\n  //   let wordContainer = [];\n  //   let keysSorted = null;\n    \n  //   for(let i=0; i<textArray.length;i++){\n  //     wordContainer[textArray[i]] = (wordContainer[textArray[i]] || 0 ) + 1; //use key value pairs \n  //   }\n    \n  //   keysSorted = Object.keys(wordContainer).sort(function(a,b){return wordContainer[b]-wordContainer[a]})\n    \n  //   this.createWordMapData(wordContainer,keysSorted)\n  //   //return {wordContainer, keysSorted};\n  // }\n\n  //get topWords (a scalar) from menu selector to know how many words to use for wordMap\n  updateTopWords = (topWords) => {\n    //this.wordMap(this.state.transcript);\n    let data = wordmap.wordMap(this.state.transcript,topWords);\n    data.keysSorted.shift() //top words sorted except the first one\n    console.log('******* top words sorted',data.keysSorted);\n    let found_sentences = sentenceFinder.sentenceFinder(this.state.transcript,data.keysSorted);\n    console.log(\"####CONSOLE\",found_sentences);\n    this.setState({\n      topWords: topWords, \n      wordMapData: data.data, \n      top_words_sorted: data.keysSorted,\n      found_sentences: found_sentences\n    });\n  }\n\n  //Called from within <TextFields/> component provides words in input text box\n  updateResults = (wordstoCount) => {\n\n    this.setState({\n      words: wordstoCount\n    });\n\n    this.wordCount(this.state.transcript, wordstoCount.toString().trim())\n  }\n\n  getTranscript = (transcript) => {\n    // console.log('getTranscript text', transcript)\n    this.setState({ transcript: transcript })\n\n  }\n\n  uploaderUrlChanged = url => {\n    this.setState({ uploaderUrl: url });\n  }\n\n  //Receives a string with transcript and string with words to search\n  wordCount = (text, words) => {\n\n    let counter = 0;\n    let textArray = text.split(\" \");\n    let searchTerms = words.split(\" \");\n    let result = [];\n\n    for (let k = 0; k < searchTerms.length; k++) {\n      for (let i = 0; i < textArray.length; i++) {\n        if (textArray[i] === searchTerms[k]) {\n          counter++;\n        }\n      }\n      result[k] = counter;\n      counter = 0;\n    }\n\n    this.createObject(result, searchTerms)\n    return result;\n\n  }\n\n  //takes wordCount results creates object and updates state to refresh chart\n  createObject = (result, searchTerms) => {\n\n    let data = [];\n\n    for (let i = 0; i < searchTerms.length; i++) {\n      data.push({\n        name: searchTerms[i], pv: result[i]\n      })\n    }\n\n    //Update state to refresh chart\n    this.setState({\n      data: data\n    });\n  }\n\n  render() {\n\n    let words = this.state.words.toString().trim()\n\n    return (\n      <Router>\n        <Navbar loginController={loginController} />\n        <br /><br />\n        <Switch>\n          {!this.state.user && <Route path=\"/RegistrationPage\" component={RegistrationPage} />}\n          {!this.state.user && <Route path=\"/LoginPage/:reason?\" component={LoginPage} />}\n          {!this.state.user && <Route exact path=\"/\" component={FrontPage} />}\n\n          {this.state.user && <Route exact path=\"/UserHomePage\" render={props =>\n            <UploadPage user_id={this.state.user.id} /> \n              }\n            />}\n\n            \n          \n          {this.state.user && <Route exact path='/Results/:fileInfoId?' render={props =>\n            <div>\n              <div className=\"container\">\n                <div className=\"row \">\n                  <div className=\"col col-lg-6\">\n                    <Transcript getTranscript={this.getTranscript} />\n                  </div>\n                  <div className=\"col col-lg-6\">\n                    <TextFields updateResults={this.updateResults} />\n                    <br></br>\n                    <BarChart data={this.state.data} />\n                    <NumberSelector updateTopWords={this.updateTopWords}/>\n                    <BarChartWordMap data={this.state.wordMapData} />\n                    \n                    <NumberSelectorSentence updateTopWords={this.updateTopWords} top_words_sorted={this.state.top_words_sorted}/>\n                    <ScrollTabSentence \n                      top_words_sorted={[\"↵Speaker\", \"0\", \"1\", \"a\", \"you\", \"I\", \"this\", \"is\", \"to\", \"see\", \"if\", \"recognize\", \"though.\", \"And\", \"that\", \"be\", \"speaker\", \"Yeah.\", \"at\", \"could\", \"it.\", \"Speaker\", \"00:00\", \"Now.\", \"So\", \"test\", \"rabbi\"]}\n                      found_sentences={this.state.found_sentences}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          } />}\n          \n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n{/* { this.state.user ? <div>User: {this.state.user.username} UserID: {this.state.user.id}</div> : null } */ }\n\n\n\n"]},"metadata":{},"sourceType":"module"}